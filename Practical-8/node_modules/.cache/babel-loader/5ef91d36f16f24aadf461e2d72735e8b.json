{"ast":null,"code":"var _jsxFileName = \"/home/chintanjoshi/Desktop/Demo/React/Practical-8/src/components/InputForm.js\";\nimport React from \"react\";\nimport \"./InputForm.css\";\nimport TextField from \"./TextField\";\nimport signup from \"../images/signup.png\";\nimport UploadPhoto from \"./UploadPhoto\";\nimport { Formik, Form } from \"formik\";\nimport * as Yup from \"yup\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass InputForm extends React.Component {\n  render() {\n    const validateInput = Yup.object({\n      name: Yup.string().max(15, \"No. of characters allowed are 15 only\").required(\"Required\"),\n      email: Yup.string().max(15, \"Please enter a valid Email\").required(\"Required\"),\n      phone: Yup.number().max(10, \"Number cannot be greater than 10 digits\").min(10, \"Number must contain atleat 10 digits\").required(\"Required\"),\n      password: Yup.string().max(15, \"Enter a correct password\").required(\"Required\"),\n      confirmPassword: Yup.string().max(15, \"Password does not match with above entered password\").required(\"Required\")\n    });\n    return /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: {\n        name: \"\",\n        email: \"\",\n        phone: \"\",\n        password: \"\",\n        confirmPassword: \"\"\n      },\n      validationSchema: validateInput,\n      children: formik => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex-layout\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"signup-form-layout\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-layout\",\n            children: \"Signup\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Form, {\n            children: [/*#__PURE__*/_jsxDEV(UploadPhoto, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              label: \"Name\",\n              name: \"name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              label: \"Email\",\n              name: \"email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              label: \"PhoneNo\",\n              name: \"phone\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              label: \"Password\",\n              name: \"password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              label: \"Confirm Password\",\n              name: \"confirmPassword\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"button-layout\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"submit\",\n                children: \"Submit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 60,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"reset\",\n                children: \"Reset\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 61,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"image-layout\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: signup,\n            title: \"Image\",\n            alt: \"image not loaded\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default InputForm;","map":{"version":3,"sources":["/home/chintanjoshi/Desktop/Demo/React/Practical-8/src/components/InputForm.js"],"names":["React","TextField","signup","UploadPhoto","Formik","Form","Yup","InputForm","Component","render","validateInput","object","name","string","max","required","email","phone","number","min","password","confirmPassword","formik"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport \"./InputForm.css\";\nimport TextField from \"./TextField\";\nimport signup from \"../images/signup.png\";\nimport UploadPhoto from \"./UploadPhoto\";\nimport { Formik, Form } from \"formik\";\nimport * as Yup from \"yup\";\n\nclass InputForm extends React.Component {\n  \n  render() {\n    const validateInput = Yup.object({\n        name: Yup.string()\n          .max(15, \"No. of characters allowed are 15 only\")\n          .required(\"Required\"),\n        email: Yup.string()\n          .max(15, \"Please enter a valid Email\")\n          .required(\"Required\"),\n        phone: Yup.number()\n          .max(10, \"Number cannot be greater than 10 digits\")\n          .min(10, \"Number must contain atleat 10 digits\")\n          .required(\"Required\"),\n        password: Yup.string()\n          .max(15, \"Enter a correct password\")\n          .required(\"Required\"),\n        confirmPassword: Yup.string()\n          .max(15, \"Password does not match with above entered password\")\n          .required(\"Required\"),\n      });\n    \n    return (\n      <Formik\n        initialValues={{\n          name: \"\",\n          email: \"\",\n          phone: \"\",\n          password: \"\",\n          confirmPassword: \"\",\n        }}\n        validationSchema={validateInput}\n      >\n        {(formik) => (\n          <div className=\"flex-layout\">\n            <div className=\"signup-form-layout\">\n              <div className=\"text-layout\">Signup</div>\n              {/* {console.log(formik.values)} */}\n              <Form>\n                <UploadPhoto />\n                {/* <div>Name</div> */}\n                <TextField label=\"Name\" name=\"name\" />\n                {/* <div>Email</div> */}\n                <TextField label=\"Email\" name=\"email\" />\n                {/* <div>Phone</div> */}\n                <TextField label=\"PhoneNo\" name=\"phone\" />\n                {/* <div>Password</div> */}\n                <TextField label=\"Password\" name=\"password\" />\n                {/* <div>Confirm Password</div> */}\n                <TextField label=\"Confirm Password\" name=\"confirmPassword\" />\n                <div className=\"button-layout\">\n                  <button className=\"submit\">Submit</button>\n                  <button className=\"reset\">Reset</button>\n                </div>\n              </Form>\n            </div>\n\n            <div className=\"image-layout\">\n              <img src={signup} title=\"Image\" alt=\"image not loaded\"></img>\n            </div>\n          </div>\n        )}\n      </Formik>\n    );\n  }\n}\n\nexport default InputForm;\n"]},"metadata":{},"sourceType":"module"}