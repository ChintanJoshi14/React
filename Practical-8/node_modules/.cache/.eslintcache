[{"/home/chintanjoshi/Desktop/Demo/React/Practical-8/src/index.js":"1","/home/chintanjoshi/Desktop/Demo/React/Practical-8/src/App.js":"2","/home/chintanjoshi/Desktop/Demo/React/Practical-8/src/reportWebVitals.js":"3","/home/chintanjoshi/Desktop/Demo/React/Practical-8/src/components/InputForm.js":"4","/home/chintanjoshi/Desktop/Demo/React/Practical-8/src/components/UploadPhoto.js":"5","/home/chintanjoshi/Desktop/Demo/React/Practical-8/src/components/TextField.js":"6","/home/chintanjoshi/Desktop/Demo/React/Practical-8/src/store/store.js":"7"},{"size":620,"mtime":1647322246106,"results":"8","hashOfConfig":"9"},{"size":264,"mtime":1647322250550,"results":"10","hashOfConfig":"9"},{"size":362,"mtime":1646814922762,"results":"11","hashOfConfig":"9"},{"size":6019,"mtime":1647418411977,"results":"12","hashOfConfig":"9"},{"size":366,"mtime":1647339987393,"results":"13","hashOfConfig":"9"},{"size":902,"mtime":1646986122580,"results":"14","hashOfConfig":"9"},{"size":654,"mtime":1647342719803,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","suppressedMessages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1bmmpss",{"filePath":"19","messages":"20","suppressedMessages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"25"},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/chintanjoshi/Desktop/Demo/React/Practical-8/src/index.js",[],[],"/home/chintanjoshi/Desktop/Demo/React/Practical-8/src/App.js",[],[],"/home/chintanjoshi/Desktop/Demo/React/Practical-8/src/reportWebVitals.js",[],[],["39","40"],"/home/chintanjoshi/Desktop/Demo/React/Practical-8/src/components/InputForm.js",["41","42","43","44"],[],"/home/chintanjoshi/Desktop/Demo/React/Practical-8/src/components/UploadPhoto.js",["45"],[],"/home/chintanjoshi/Desktop/Demo/React/Practical-8/src/components/TextField.js",["46","47"],[],"import React from 'react';\nimport './TextField.css';\nimport { ErrorMessage ,useField } from 'formik';\nimport {Input} from 'antd';\n\n\nclass TextField extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state= {\n            name: [this.props.name]\n\n        }\n        //to check if data is coming from the parent component:\n        console.log(this.state.name);\n    }\n    \nrender() {\n    const {name} = this.state;\n    return(\n        <div className='textfield-layout'>\n            <label htmlFor={this.state.name}>{this.props.label}</label>\n            <br/><Input {...this.state.name === 'password' || this.state.name === 'confirmPassword' ? 'typePass' : 'typeText'} \n            {...this.props.field} \n            {...this.state.label}>\n                </Input><br/>\n            <ErrorMessage name={this.state.name}/>\n        </div>\n    );\n}\n}\n\nexport default TextField;","/home/chintanjoshi/Desktop/Demo/React/Practical-8/src/store/store.js",[],[],{"ruleId":"48","replacedBy":"49"},{"ruleId":"50","replacedBy":"51"},{"ruleId":"52","severity":1,"message":"53","line":4,"column":8,"nodeType":"54","messageId":"55","endLine":4,"endColumn":19},{"ruleId":"52","severity":1,"message":"56","line":5,"column":45,"nodeType":"54","messageId":"55","endLine":5,"endColumn":58},{"ruleId":"52","severity":1,"message":"57","line":7,"column":10,"nodeType":"54","messageId":"55","endLine":7,"endColumn":17},{"ruleId":"58","severity":1,"message":"59","line":175,"column":17,"nodeType":"60","endLine":175,"endColumn":72},{"ruleId":"52","severity":1,"message":"61","line":1,"column":10,"nodeType":"54","messageId":"55","endLine":1,"endColumn":15},{"ruleId":"52","severity":1,"message":"62","line":3,"column":24,"nodeType":"54","messageId":"55","endLine":3,"endColumn":32},{"ruleId":"52","severity":1,"message":"63","line":19,"column":12,"nodeType":"54","messageId":"55","endLine":19,"endColumn":16},"no-native-reassign",["64"],"no-negated-in-lhs",["65"],"no-unused-vars","'UploadPhoto' is defined but never used.","Identifier","unusedVar","'KErrorMessage' is defined but never used.","'connect' is defined but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You donâ€™t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","'Field' is defined but never used.","'useField' is defined but never used.","'name' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]