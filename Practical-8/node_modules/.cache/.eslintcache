[{"/home/chintanjoshi/Desktop/Demo/React/Practical-8/src/index.js":"1","/home/chintanjoshi/Desktop/Demo/React/Practical-8/src/App.js":"2","/home/chintanjoshi/Desktop/Demo/React/Practical-8/src/reportWebVitals.js":"3","/home/chintanjoshi/Desktop/Demo/React/Practical-8/src/components/InputForm.js":"4","/home/chintanjoshi/Desktop/Demo/React/Practical-8/src/components/UploadPhoto.js":"5","/home/chintanjoshi/Desktop/Demo/React/Practical-8/src/components/TextField.js":"6","/home/chintanjoshi/Desktop/Demo/React/Practical-8/src/store/store.js":"7","/home/chintanjoshi/Desktop/Demo/React/Practical-8/src/components/Home.js":"8"},{"size":622,"mtime":1647425853271,"results":"9","hashOfConfig":"10"},{"size":591,"mtime":1647426876973,"results":"11","hashOfConfig":"10"},{"size":362,"mtime":1646814922762,"results":"12","hashOfConfig":"10"},{"size":5913,"mtime":1647427599533,"results":"13","hashOfConfig":"10"},{"size":366,"mtime":1647339987393,"results":"14","hashOfConfig":"10"},{"size":902,"mtime":1646986122580,"results":"15","hashOfConfig":"10"},{"size":654,"mtime":1647342719803,"results":"16","hashOfConfig":"10"},{"size":256,"mtime":1647427478109,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","suppressedMessages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1bmmpss",{"filePath":"21","messages":"22","suppressedMessages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"27"},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"39"},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/chintanjoshi/Desktop/Demo/React/Practical-8/src/index.js",[],[],"/home/chintanjoshi/Desktop/Demo/React/Practical-8/src/App.js",[],[],"/home/chintanjoshi/Desktop/Demo/React/Practical-8/src/reportWebVitals.js",[],[],["46","47"],"/home/chintanjoshi/Desktop/Demo/React/Practical-8/src/components/InputForm.js",["48","49"],[],"/home/chintanjoshi/Desktop/Demo/React/Practical-8/src/components/UploadPhoto.js",["50"],[],"import { Field } from \"formik\";\nimport React from \"react\";\nimport './UploadPhoto.css';\n\nclass UploadPhoto extends React.Component {\n  render() {\n    return (\n      <div className=\"upload-button-layout\">\n\n      \n\n\n        <input type=\"file\" id=\"upload\" hidden/>\n        <label htmlFor=\"upload\">Photo +</label>\n      </div>\n    );\n  }\n  \n}\nexport default UploadPhoto;\n","/home/chintanjoshi/Desktop/Demo/React/Practical-8/src/components/TextField.js",["51","52"],[],"import React from 'react';\nimport './TextField.css';\nimport { ErrorMessage ,useField } from 'formik';\nimport {Input} from 'antd';\n\n\nclass TextField extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state= {\n            name: [this.props.name]\n\n        }\n        //to check if data is coming from the parent component:\n        console.log(this.state.name);\n    }\n    \nrender() {\n    const {name} = this.state;\n    return(\n        <div className='textfield-layout'>\n            <label htmlFor={this.state.name}>{this.props.label}</label>\n            <br/><Input {...this.state.name === 'password' || this.state.name === 'confirmPassword' ? 'typePass' : 'typeText'} \n            {...this.props.field} \n            {...this.state.label}>\n                </Input><br/>\n            <ErrorMessage name={this.state.name}/>\n        </div>\n    );\n}\n}\n\nexport default TextField;",["53","54"],"/home/chintanjoshi/Desktop/Demo/React/Practical-8/src/store/store.js",[],[],"/home/chintanjoshi/Desktop/Demo/React/Practical-8/src/components/Home.js",[],[],{"ruleId":"55","replacedBy":"56"},{"ruleId":"57","replacedBy":"58"},{"ruleId":"59","severity":1,"message":"60","line":6,"column":10,"nodeType":"61","messageId":"62","endLine":6,"endColumn":17},{"ruleId":"63","severity":1,"message":"64","line":176,"column":17,"nodeType":"65","endLine":176,"endColumn":72},{"ruleId":"59","severity":1,"message":"66","line":1,"column":10,"nodeType":"61","messageId":"62","endLine":1,"endColumn":15},{"ruleId":"59","severity":1,"message":"67","line":3,"column":24,"nodeType":"61","messageId":"62","endLine":3,"endColumn":32},{"ruleId":"59","severity":1,"message":"68","line":19,"column":12,"nodeType":"61","messageId":"62","endLine":19,"endColumn":16},{"ruleId":"55","replacedBy":"69"},{"ruleId":"57","replacedBy":"70"},"no-native-reassign",["71"],"no-negated-in-lhs",["72"],"no-unused-vars","'connect' is defined but never used.","Identifier","unusedVar","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You donâ€™t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","'Field' is defined but never used.","'useField' is defined but never used.","'name' is assigned a value but never used.",["71"],["72"],"no-global-assign","no-unsafe-negation"]